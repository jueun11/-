// *내풀이
function solution(letter) {
  let morse = [ 
  '.-','-...','-.-.','-..','.','..-.',
  '--.','....','..','.---','-.-','.-..',
  '--','-.','---','.--.','--.-','.-.',
  '...','-','..-','...-','.--','-..-',
  '-.--','--..'
  ]
  //배열로만듬
  let code_list = letter.split(' ').map((el)=> morse.indexOf(el) + 97 );
  //letter도 배열로 나누고, 각 요소와 mores가 일치하는 인덱스 값을 찾고 아스키코드 a값인 97을 더해줌
  return code_list.map((el) => String.fromCharCode(el)).join("");
  //이후 숫자를 영어로 변환, join으로 합침
}

// *다른풀이
morse = { 
  '.-':'a','-...':'b','-.-.':'c','-..':'d','.':'e','..-.':'f',
  '--.':'g','....':'h','..':'i','.---':'j','-.-':'k','.-..':'l',
  '--':'m','-.':'n','---':'o','.--.':'p','--.-':'q','.-.':'r',
  '...':'s','-':'t','..-':'u','...-':'v','.--':'w','-..-':'x',
  '-.--':'y','--..':'z'
}

function solution(letter) {
  return letter.split(' ').reduce((prev, curr) => prev + morse[curr], '')
  // : 앞의 부분이 일치하면 :뒤의 값을 반환하나보다. reduce는 초기값에 각 요소에 무언가 실행시켜준 것을 누적시켜준다. 여기서 초기값은, '' 부분이다. 
  // 누적값 + 요소로 단어를 만들어준다.
  // : 앞의 부분을 찾으면 뒤의 부분이 나오는걸 인식하지 못했었다! 세상에..괜히 어렵게함ㅜㅜ
}